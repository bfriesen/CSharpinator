using System.Collections.Generic;
using System.IO;
using System.Linq;

namespace CSharpinator
{
    public class ClassGenerator
    {
        private readonly IRepository _repository;

        public ClassGenerator(IRepository repository)
        {
            _repository = repository;
        }

        public void Write(string @namespace, Case classCase, Case propertyCase, TextWriter writer, bool skipNamespace, DocumentType documentType)
        {
            WriteHeader(writer, documentType);

            if (!skipNamespace)
            {
                WriteUsings(writer, documentType);
                writer.WriteLine();
                writer.WriteLine("namespace {0}", @namespace);
                writer.WriteLine("{");
            }

            var usedClasses = _repository.GetUsedClasses().ToList();

            if (usedClasses.Count == 0)
            {
                writer.WriteLine("/* No used classes found! */");
            }

            writer.WriteLine(
                string.Join(
                    "\r\n\r\n",
                    _repository.GetUsedClasses().Select(x => x.GenerateCSharpCode(classCase, propertyCase, documentType))));

            if (!skipNamespace)
            {
                writer.WriteLine("}");
            }
        }

        private void WriteHeader(TextWriter writer, DocumentType documentType)
        {
            var references = new HashSet<string>();

            if (_repository.References != null)
            {
                foreach (var reference in _repository.References)
                {
                    references.Add(reference);
                }
            }

            if (documentType == DocumentType.Json)
            {
                references.Add("System.Runtime.Serialization.dll");
            }

            writer.Write(
@"//------------------------------------------------------------------------------ 
// <auto-generated>
// This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if 
// the code is regenerated.{0}
// 
// </auto-generated>
//------------------------------------------------------------------------------

",
                references.Any()
                    ? @"
// 
// The classes in this file require additional references. Please add the
// following references to your project:
//     " + string.Join(@"
//     ", references)
                    : "");
        }

        private void WriteUsings(TextWriter writer, DocumentType documentType)
        {
            var usings = new HashSet<string>
            {
                "System",
                "System.Collections.Generic",
                "System.Globalization",
            };

            if (documentType == DocumentType.Xml)
            {
                usings.Add("System.Xml.Serialization");
            }
            else if (documentType == DocumentType.Json)
            {
                usings.Add("System.Runtime.Serialization");
            }

            foreach (var @using in _repository.Usings)
            {
                usings.Add(@using);
            }

            foreach (var @using in usings)
            {
                writer.WriteLine("using {0};", @using);
            }
        }
    }
}
